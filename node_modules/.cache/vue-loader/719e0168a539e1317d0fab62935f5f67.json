{"remainingRequest":"C:\\Users\\Lenovo\\Downloads\\Compressed\\travel-master\\travel-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lenovo\\Downloads\\Compressed\\travel-master\\travel-master\\node_modules\\vue-awesome-swiper\\src\\swiper.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lenovo\\Downloads\\Compressed\\travel-master\\travel-master\\node_modules\\vue-awesome-swiper\\src\\swiper.vue","mtime":1708077601758},{"path":"C:\\Users\\Lenovo\\Downloads\\Compressed\\travel-master\\travel-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1708077614823},{"path":"C:\\Users\\Lenovo\\Downloads\\Compressed\\travel-master\\travel-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1708077616092},{"path":"C:\\Users\\Lenovo\\Downloads\\Compressed\\travel-master\\travel-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1708077614823},{"path":"C:\\Users\\Lenovo\\Downloads\\Compressed\\travel-master\\travel-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1708077599485}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar browser = typeof window !== 'undefined'\nif (browser) window.Swiper = require('swiper')\nexport default {\n  name: 'swiper',\n  props: {\n    options: {\n      type: Object,\n      default: function() {\n        return {\n          autoplay: 3500\n        }\n      }\n    },\n    notNextTick: {\n      type: Boolean,\n      default: function() {\n        return false\n      }\n    }\n  },\n  data: function() {\n    return {\n      defaultSwiperClasses: {\n        wrapperClass: 'swiper-wrapper'\n      }\n    }\n  },\n  ready: function() {\n    if (!this.swiper && browser) {\n      this.swiper = new Swiper(this.$el, this.options)\n    }\n  },\n  mounted: function() {\n    var self = this\n    var mount = function() {\n      if (!self.swiper && browser) {\n        delete self.options.notNextTick\n        var setClassName = false\n        for(var className in self.defaultSwiperClasses){\n          if (self.defaultSwiperClasses.hasOwnProperty(className)) {\n            if (self.options[className]) {\n              setClassName = true\n              self.defaultSwiperClasses[className] = self.options[className]\n            }\n          }\n        }\n        var mountInstance = function() {\n          self.swiper = new Swiper(self.$el, self.options)\n        }\n        setClassName ? self.$nextTick(mountInstance) : mountInstance()\n      }\n    }\n    (this.options.notNextTick || this.notNextTick) ? mount() : this.$nextTick(mount)\n  },\n  updated: function() {\n    if (this.swiper) {\n      this.swiper.update()\n    }\n  },\n  beforeDestroy: function() {\n    if (this.swiper) {\n      this.swiper.destroy()\n      delete this.swiper\n    }\n  }\n}\n",{"version":3,"sources":["swiper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"swiper.vue","sourceRoot":"node_modules/vue-awesome-swiper/src","sourcesContent":["<template>\r\n  <div class=\"swiper-container\">\r\n    <slot name=\"parallax-bg\"></slot>\r\n    <div :class=\"defaultSwiperClasses.wrapperClass\">\r\n      <slot></slot>\r\n    </div>\r\n    <slot name=\"pagination\"></slot>\r\n    <slot name=\"button-prev\"></slot>\r\n    <slot name=\"button-next\"></slot>\r\n    <slot name=\"scrollbar\"></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  var browser = typeof window !== 'undefined'\r\n  if (browser) window.Swiper = require('swiper')\r\n  export default {\r\n    name: 'swiper',\r\n    props: {\r\n      options: {\r\n        type: Object,\r\n        default: function() {\r\n          return {\r\n            autoplay: 3500\r\n          }\r\n        }\r\n      },\r\n      notNextTick: {\r\n        type: Boolean,\r\n        default: function() {\r\n          return false\r\n        }\r\n      }\r\n    },\r\n    data: function() {\r\n      return {\r\n        defaultSwiperClasses: {\r\n          wrapperClass: 'swiper-wrapper'\r\n        }\r\n      }\r\n    },\r\n    ready: function() {\r\n      if (!this.swiper && browser) {\r\n        this.swiper = new Swiper(this.$el, this.options)\r\n      }\r\n    },\r\n    mounted: function() {\r\n      var self = this\r\n      var mount = function() {\r\n        if (!self.swiper && browser) {\r\n          delete self.options.notNextTick\r\n          var setClassName = false\r\n          for(var className in self.defaultSwiperClasses){\r\n            if (self.defaultSwiperClasses.hasOwnProperty(className)) {\r\n              if (self.options[className]) {\r\n                setClassName = true\r\n                self.defaultSwiperClasses[className] = self.options[className]\r\n              }\r\n            }\r\n          }\r\n          var mountInstance = function() {\r\n            self.swiper = new Swiper(self.$el, self.options)\r\n          }\r\n          setClassName ? self.$nextTick(mountInstance) : mountInstance()\r\n        }\r\n      }\r\n      (this.options.notNextTick || this.notNextTick) ? mount() : this.$nextTick(mount)\r\n    },\r\n    updated: function() {\r\n      if (this.swiper) {\r\n        this.swiper.update()\r\n      }\r\n    },\r\n    beforeDestroy: function() {\r\n      if (this.swiper) {\r\n        this.swiper.destroy()\r\n        delete this.swiper\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}